@import "../../style/config";
@import "../../style/mixins";

// size mixins for input
@mixin input-lg() {
  padding: $input-padding-vertical-lg $input-padding-horizontal;
  height: $input-height-lg;
}

@mixin input-sm() {
  padding: $input-padding-vertical-sm $input-padding-horizontal;
  height: $input-height-sm;
  border-radius: $border-radius-sm;
}

// input status
// == when focus or actived
@mixin active($color: $outline-color) {
  border-color: tint($color, 20%);
  outline: 0;
  box-shadow: 0 0 $outline-blur-size $outline-width fade($color, 20%);
}

// == when hoverd
@mixin hover($color: $input-hover-border-color) {
  border-color: tint($color, 20%);
}

@mixin disabled() {
  background-color: $input-disabled-bg;
  opacity: 1;
  cursor: not-allowed;
  color: #ccc;
  &:hover {
    @include hover($input-border-color);
  }
}

// Basic style for input
@mixin input() {
  position      : relative;
  display       : inline-block;
  padding       : $input-padding-vertical-base $input-padding-horizontal;
  width         : 100%;
  height        : $input-height-base;
  cursor        : text;
  font-size     : $font-size-base;
  line-height   : $line-height-base;
  color         : $input-color;
  background    : $input-bg none;
  border        : 1px solid $input-border-color;
  border-radius : $border-radius-base;
  @include placeholder(); // Reset placeholder
  transition    : border .2s $ease-in-out, background .2s $ease-in-out, box-shadow .2s $ease-in-out;

  &:hover {
    @include hover();
  }

  &:focus {
    @include active();
  }

  &[disabled] {
    @include disabled();
  }

  // Reset height for `textarea`s
  $current_prefix: &;
  textarea#{$current_prefix} {
    max-width: 100%; // prevent textearea resize from coming out of its container
    height: auto;
    vertical-align: bottom;
  }

  // Size
  &-lg {
    @include input-lg();
  }

  &-sm {
    @include input-sm();
  }
}

// Input with icons, you can define $height if you wish to change the input size
@mixin input-with-icon($height: $input-height-base) {
  position: relative;

  .#{$iconfont-css-prefix} {
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 2;
    @include square($height);
    font-size: $font-size-lg;
    line-height: $height;
    text-align: center;
    pointer-events: none;
  }
}

// label input
@mixin input-group($inputClass) {
  position: relative;
  display: table;
  border-collapse: separate;
  width: 100%;

  // Undo padding and float of grid classes
  &[class*="col-"] {
    float: none;
    padding-left: 0;
    padding-right: 0;
  }

  > [class*="col-"] {
    padding-right: 8px;
  }

  &-addon,
  &-wrap,
  > .#{$inputClass} {
    display: table-cell;

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
  }

  &-addon,
  &-wrap {
    width: 1px; // To make addon/wrap as small as possible
    white-space: nowrap;
    vertical-align: middle;
  }

  &-wrap > * {
    display: block !important;
  }

  .#{$inputClass} {
    position: relative;
    z-index: 2;
    float: left;
    width: 100%;
    margin-bottom: 0;
  }

  &-addon {
    padding: $input-padding-vertical-base $input-padding-horizontal;
    font-size: $font-size-base;
    font-weight: normal;
    line-height: 1;
    color: $input-color;
    text-align: center;
    background-color: #eee;
    border: 1px solid $input-border-color;
    border-radius: $border-radius-base;
    position: relative;

    // Reset Select's style in addon
    .#{$css-prefix}select {
      margin: -($input-padding-vertical-base + 1) (-$input-padding-horizontal);  // lesshint spaceAroundOperator: false

      .#{$css-prefix}select-selection {
        background-color: inherit;
        border: 0;
        margin: -1px;
        border: 1px solid transparent;
        box-shadow: none;
      }

      &-open,
      &-focused {
        .#{$css-prefix}select-selection {
          color: $primary-color;
        }
      }
    }

    // Expand addon icon click area
    // https://github.com/ant-design/ant-design/issues/3714
    > i:only-child:after {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }

  // Reset rounded corners
  > span > .#{$inputClass}:first-child,
  > .#{$inputClass}:first-child,
  &-addon:first-child {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;

    // Reset Select's style in addon
    .#{$css-prefix}-select .#{$css-prefix}-select-selection {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
  }

  &-addon:first-child {
    border-right: 0;
  }
  &-addon:last-child {
    border-left: 0;
  }

  > .#{$inputClass}:last-child,
  &-addon:last-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;

    // Reset Select's style in addon
    .#{$css-prefix}-select .#{$css-prefix}-select-selection {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }
  }

  // Sizing options
  &-lg .#{$inputClass},
  &-lg > &-addon {
    @include input-lg();
  }

  &-sm .#{$inputClass},
  &-sm > &-addon {
    @include input-sm();
  }
}
