webpackJsonp([21,129],{49:function(n,s,a){"use strict";a(11),a(92)},92:function(n,s){},352:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}function p(n){var s=void 0,a=n.userAgent,t=a.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(t[1])?(s=/\brv[ :]+(\d+)/g.exec(a)||[],"IE "+(s[1]||"")):"Chrome"===t[1]&&(s=a.match(/\b(OPR|Edge)\/(\d+)/))?s.slice(1).join(" ").replace("OPR","Opera"):(t=t[2]?[t[1],t[2]]:[n.appName,n.appVersion,"-?"],s=a.match(/version\/(\d+)/i),s&&t.splice(1,1,s[1]),t.join(" "))}function e(n){var s=void 0,a=void 0,t=void 0,p=void 0;return n.getClientRects().length?(p=n.getBoundingClientRect(),p.width||p.height?(s=n.ownerDocument,a=s.defaultView,t=s.documentElement,{top:p.top+a.pageYOffset-t.clientTop,left:p.left+a.pageXOffset-t.clientLeft}):p):{top:0,left:0}}function o(n){var s=1;return Array.isArray(n)&&(s=n.length),s}function c(n,s,a){return 1===s?(a.first=!0,a.last=!0):(a.first=0===n,a.last=n===s-1),a}function u(n,s,a){var t=function p(n,a,t){var e=o(n);m["default"].Children.forEach(n,function(n,o){var u=a+"-"+o;n.props.children&&n.type&&n.type.isTreeNode&&p(n.props.children,u,{node:n,pos:u}),s(n,o,u,n.key||u,c(o,e,{}),t)})};t(n,0,a)}function l(n,s){return n.every(function(n,a){return n===s[a]})}function i(n){var s={};n.forEach(function(n){var a=n.split("-").length;s[a]||(s[a]=[]),s[a].push(n)});for(var a=Object.keys(s).sort(),t=function(n){a[n+1]&&s[a[n]].forEach(function(t){for(var p=function(n){s[a[n]].forEach(function(p,e){l(t.split("-"),p.split("-"))&&(s[a[n]][e]=null)}),s[a[n]]=s[a[n]].filter(function(n){return n})},e=n+1;e<a.length;e++)p(e)})},p=0;p<a.length;p++)t(p);var e=[];return a.forEach(function(n){e=e.concat(s[n])}),e}function r(n){var s=n.match(/(.+)(-[^-]+)$/),a="";return s&&3===s.length&&(a=s[1]),a}function k(n){return n.split("-")}function d(n,s,a){var t=Object.keys(n);t.forEach(function(p,e){var o=k(p),c=!1;s.forEach(function(s){var u=k(s);o.length>u.length&&l(u,o)&&(n[p].halfChecked=!1,n[p].checked=a,t[e]=null),o[0]===u[0]&&o[1]===u[1]&&(c=!0)}),c||(t[e]=null)}),t=t.filter(function(n){return n});for(var p=function(a){var p=function o(p){var e=k(p).length;if(!(e<=2)){var c=0,u=0,i=r(p);t.forEach(function(t){var p=k(t);if(p.length===e&&l(k(i),p))if(c++,n[t].checked){u++;var o=s.indexOf(t);o>-1&&(s.splice(o,1),o<=a&&a--)}else n[t].halfChecked&&(u+=.5)});var d=n[i];0===u?(d.checked=!1,d.halfChecked=!1):u===c?(d.checked=!0,d.halfChecked=!1):(d.halfChecked=!0,d.checked=!1),o(i)}};p(s[a],a),e=a},e=0;e<s.length;e++)p(e)}function f(n){var s=[],a=[],t=[],p=[];return Object.keys(n).forEach(function(e){var o=n[e];o.checked?(a.push(o.key),t.push(o.node),p.push({node:o.node,pos:e})):o.halfChecked&&s.push(o.key)}),{halfCheckedKeys:s,checkedKeys:a,checkedNodes:t,checkedNodesPositions:p,treeNodesStates:n}}function h(n,s){return s?{checked:n,halfChecked:s}:n}function y(n,s){if(n===s)return!0;if(null===n||"undefined"==typeof n||null===s||"undefined"==typeof s)return!1;if(n.length!==s.length)return!1;for(var a=0;a<n.length;++a)if(n[a]!==s[a])return!1;return!0}Object.defineProperty(s,"__esModule",{value:!0}),s.browser=p,s.getOffset=e,s.loopAllChildren=u,s.isInclude=l,s.filterParentPosition=i,s.handleCheckState=d,s.getCheck=f,s.getStrictlyValue=h,s.arraysEqual=y;var g=a(1),m=t(g)},367:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(s,"__esModule",{value:!0}),s["default"]=s.AntTreeNode=void 0;var p=a(7),e=t(p),o=a(4),c=t(o),u=a(6),l=t(u),i=a(5),r=t(i),k=a(1),d=t(k),f=a(538),h=t(f),y=a(577),g=t(y),m=(s.AntTreeNode=function(n){function s(){return(0,c["default"])(this,s),(0,l["default"])(this,n.apply(this,arguments))}return(0,r["default"])(s,n),s.prototype.render=function(){return d["default"].createElement(s,this.props)},s}(d["default"].Component),function(n){function s(){return(0,c["default"])(this,s),(0,l["default"])(this,n.apply(this,arguments))}return(0,r["default"])(s,n),s.prototype.render=function(){var n=this.props,s=n.checkable;return d["default"].createElement(h["default"],(0,e["default"])({},n,{checkable:s?d["default"].createElement("span",{className:n.prefixCls+"-checkbox-inner"}):s}),this.props.children)},s}(d["default"].Component));s["default"]=m,m.TreeNode=f.TreeNode,m.defaultProps={prefixCls:"ant-tree",checkable:!1,showIcon:!1,openAnimation:g["default"]}},368:function(n,s,a){"use strict";a(11),a(1526),a(49)},536:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}function p(n,s){for(var a=Object.getOwnPropertyNames(s),t=0;t<a.length;t++){var p=a[t],e=Object.getOwnPropertyDescriptor(s,p);e&&e.configurable&&void 0===n[p]&&Object.defineProperty(n,p,e)}return n}function e(n){if(Array.isArray(n)){for(var s=0,a=Array(n.length);s<n.length;s++)a[s]=n[s];return a}return Array.from(n)}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function c(n,s){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!s||"object"!=typeof s&&"function"!=typeof s?n:s}function u(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function, not "+typeof s);n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),s&&(Object.setPrototypeOf?Object.setPrototypeOf(n,s):p(n,s))}function l(){}Object.defineProperty(s,"__esModule",{value:!0});var i=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n},r=a(1),k=t(r),d=a(10),f=t(d),h=a(3),y=t(h),g=a(352),m=function(n){function s(a){o(this,s);var t=c(this,n.call(this,a));return["onKeyDown","onCheck"].forEach(function(n){t[n]=t[n].bind(t)}),t.contextmenuKeys=[],t.checkedKeysChange=!0,t.state={expandedKeys:t.getDefaultExpandedKeys(a),checkedKeys:t.getDefaultCheckedKeys(a),selectedKeys:t.getDefaultSelectedKeys(a),dragNodesKeys:"",dragOverNodeKey:"",dropNodeKey:""},t}return u(s,n),s.prototype.componentWillReceiveProps=function(n){var s=this.getDefaultExpandedKeys(n,!0),a=this.getDefaultCheckedKeys(n,!0),t=this.getDefaultSelectedKeys(n,!0),p={};s&&(p.expandedKeys=s),a&&(n.checkedKeys===this.props.checkedKeys?this.checkedKeysChange=!1:this.checkedKeysChange=!0,p.checkedKeys=a),t&&(p.selectedKeys=t),this.setState(p)},s.prototype.onDragStart=function(n,s){this.dragNode=s,this.dragNodesKeys=this.getDragNodes(s);var a={dragNodesKeys:this.dragNodesKeys},t=this.getExpandedKeys(s,!1);t&&(this.getRawExpandedKeys(),a.expandedKeys=t),this.setState(a),this.props.onDragStart({event:n,node:s}),this._dropTrigger=!1},s.prototype.onDragEnterGap=function(n,s){var a=(0,g.getOffset)(s.refs.selectHandle).top,t=s.refs.selectHandle.offsetHeight,p=n.pageY,e=2;return p>a+t-e?(this.dropPosition=1,1):p<a+e?(this.dropPosition=-1,-1):(this.dropPosition=0,0)},s.prototype.onDragEnter=function(n,s){var a=this.onDragEnterGap(n,s);if(this.dragNode.props.eventKey===s.props.eventKey&&0===a)return void this.setState({dragOverNodeKey:""});var t={dragOverNodeKey:s.props.eventKey},p=this.getExpandedKeys(s,!0);p&&(this.getRawExpandedKeys(),t.expandedKeys=p),this.setState(t),this.props.onDragEnter({event:n,node:s,expandedKeys:p&&[].concat(e(p))||[].concat(e(this.state.expandedKeys))})},s.prototype.onDragOver=function(n,s){this.props.onDragOver({event:n,node:s})},s.prototype.onDragLeave=function(n,s){this.props.onDragLeave({event:n,node:s})},s.prototype.onDrop=function(n,s){var a=s.props.eventKey;if(this.setState({dragOverNodeKey:"",dropNodeKey:a}),this.dragNodesKeys.indexOf(a)>-1)return console.warn&&console.warn("can not drop to dragNode(include it's children node)"),!1;var t=s.props.pos.split("-"),p={event:n,node:s,dragNode:this.dragNode,dragNodesKeys:[].concat(e(this.dragNodesKeys)),dropPosition:this.dropPosition+Number(t[t.length-1])};0!==this.dropPosition&&(p.dropToGap=!0),"expandedKeys"in this.props&&(p.rawExpandedKeys=[].concat(e(this._rawExpandedKeys))||[].concat(e(this.state.expandedKeys))),this.props.onDrop(p),this._dropTrigger=!0},s.prototype.onDragEnd=function(n,s){this.setState({dragOverNodeKey:""}),this.props.onDragEnd({event:n,node:s})},s.prototype.onExpand=function(n){var s=this,a=!n.props.expanded,t="expandedKeys"in this.props,p=[].concat(e(this.state.expandedKeys)),o=p.indexOf(n.props.eventKey);if(a&&o===-1?p.push(n.props.eventKey):!a&&o>-1&&p.splice(o,1),t||this.setState({expandedKeys:p}),this.props.onExpand(p,{node:n,expanded:a}),a&&this.props.loadData)return this.props.loadData(n).then(function(){t||s.setState({expandedKeys:p})})},s.prototype.onCheck=function(n){var s=this,a=!n.props.checked;n.props.halfChecked&&(a=!0);var t=n.props.eventKey,p=[].concat(e(this.state.checkedKeys)),o=p.indexOf(t),c={event:"check",node:n,checked:a};if(this.props.checkStrictly&&"checkedKeys"in this.props)a&&o===-1&&p.push(t),!a&&o>-1&&p.splice(o,1),c.checkedNodes=[],(0,g.loopAllChildren)(this.props.children,function(n,s,a,t){p.indexOf(t)!==-1&&c.checkedNodes.push(n)}),this.props.onCheck((0,g.getStrictlyValue)(p,this.props.checkedKeys.halfChecked),c);else{a&&o===-1&&!function(){s.treeNodesStates[n.props.pos].checked=!0;var a=[];Object.keys(s.treeNodesStates).forEach(function(n){s.treeNodesStates[n].checked&&a.push(n)}),(0,g.handleCheckState)(s.treeNodesStates,(0,g.filterParentPosition)(a),!0)}(),a||(this.treeNodesStates[n.props.pos].checked=!1,this.treeNodesStates[n.props.pos].halfChecked=!1,(0,g.handleCheckState)(this.treeNodesStates,[n.props.pos],!1));var u=(0,g.getCheck)(this.treeNodesStates);c.checkedNodes=u.checkedNodes,c.checkedNodesPositions=u.checkedNodesPositions,c.halfCheckedKeys=u.halfCheckedKeys,this.checkKeys=u,this._checkedKeys=p=u.checkedKeys,"checkedKeys"in this.props||this.setState({checkedKeys:p}),this.props.onCheck(p,c)}},s.prototype.onSelect=function(n){var s=this.props,a=[].concat(e(this.state.selectedKeys)),t=n.props.eventKey,p=a.indexOf(t),o=void 0;p!==-1?(o=!1,a.splice(p,1)):(o=!0,s.multiple||(a.length=0),a.push(t));var c=[];a.length&&(0,g.loopAllChildren)(this.props.children,function(n){a.indexOf(n.key)!==-1&&c.push(n)});var u={event:"select",node:n,selected:o,selectedNodes:c};"selectedKeys"in this.props||this.setState({selectedKeys:a}),s.onSelect(a,u)},s.prototype.onMouseEnter=function(n,s){this.props.onMouseEnter({event:n,node:s})},s.prototype.onMouseLeave=function(n,s){this.props.onMouseLeave({event:n,node:s})},s.prototype.onContextMenu=function(n,s){var a=[].concat(e(this.state.selectedKeys)),t=s.props.eventKey;this.contextmenuKeys.indexOf(t)===-1&&this.contextmenuKeys.push(t),this.contextmenuKeys.forEach(function(n){var s=a.indexOf(n);s!==-1&&a.splice(s,1)}),a.indexOf(t)===-1&&a.push(t),this.setState({selectedKeys:a}),this.props.onRightClick({event:n,node:s})},s.prototype.onKeyDown=function(n){n.preventDefault()},s.prototype.getFilterExpandedKeys=function(n,s,a){var t=n[s];if(!a&&!n.autoExpandParent)return t||[];var p=[];n.autoExpandParent&&(0,g.loopAllChildren)(n.children,function(n,s,a,e){t.indexOf(e)>-1&&p.push(a)});var e=[];return(0,g.loopAllChildren)(n.children,function(s,t,o,c){a?e.push(c):n.autoExpandParent&&p.forEach(function(n){(n.split("-").length>o.split("-").length&&(0,g.isInclude)(o.split("-"),n.split("-"))||o===n)&&e.indexOf(c)===-1&&e.push(c)})}),e.length?e:t},s.prototype.getDefaultExpandedKeys=function(n,s){var a=s?void 0:this.getFilterExpandedKeys(n,"defaultExpandedKeys",!n.defaultExpandedKeys.length&&n.defaultExpandAll);return"expandedKeys"in n&&(a=(n.autoExpandParent?this.getFilterExpandedKeys(n,"expandedKeys",!1):n.expandedKeys)||[]),a},s.prototype.getDefaultCheckedKeys=function(n,s){var a=s?void 0:n.defaultCheckedKeys;return"checkedKeys"in n&&(a=n.checkedKeys||[],n.checkStrictly&&(n.checkedKeys.checked?a=n.checkedKeys.checked:Array.isArray(n.checkedKeys)||(a=[]))),a},s.prototype.getDefaultSelectedKeys=function(n,s){var a=function(s){return n.multiple?[].concat(e(s)):s.length?[s[0]]:s},t=s?void 0:a(n.defaultSelectedKeys);return"selectedKeys"in n&&(t=a(n.selectedKeys)),t},s.prototype.getRawExpandedKeys=function(){!this._rawExpandedKeys&&"expandedKeys"in this.props&&(this._rawExpandedKeys=[].concat(e(this.state.expandedKeys)))},s.prototype.getOpenTransitionName=function(){var n=this.props,s=n.openTransitionName,a=n.openAnimation;return s||"string"!=typeof a||(s=n.prefixCls+"-open-"+a),s},s.prototype.getDragNodes=function(n){var s=[],a=n.props.pos.split("-");return(0,g.loopAllChildren)(this.props.children,function(t,p,e,o){var c=e.split("-");(n.props.pos===e||a.length<c.length&&(0,g.isInclude)(a,c))&&s.push(o)}),s},s.prototype.getExpandedKeys=function(n,s){var a=n.props.eventKey,t=this.state.expandedKeys,p=t.indexOf(a),o=void 0;return p>-1&&!s?(o=[].concat(e(t)),o.splice(p,1),o):s&&t.indexOf(a)===-1?t.concat([a]):void 0},s.prototype.filterTreeNode=function a(n){var a=this.props.filterTreeNode;return"function"==typeof a&&!n.props.disabled&&a.call(this,n)},s.prototype.renderTreeNode=function(n,s){var a=arguments.length<=2||void 0===arguments[2]?0:arguments[2],t=a+"-"+s,p=n.key||t,e=this.state,o=this.props,c=o.selectable;n.props.hasOwnProperty("selectable")&&(c=n.props.selectable);var u={ref:"treeNode-"+p,root:this,eventKey:p,pos:t,selectable:c,loadData:o.loadData,onMouseEnter:o.onMouseEnter,onMouseLeave:o.onMouseLeave,onRightClick:o.onRightClick,prefixCls:o.prefixCls,showLine:o.showLine,showIcon:o.showIcon,draggable:o.draggable,dragOver:e.dragOverNodeKey===p&&0===this.dropPosition,dragOverGapTop:e.dragOverNodeKey===p&&this.dropPosition===-1,dragOverGapBottom:e.dragOverNodeKey===p&&1===this.dropPosition,_dropTrigger:this._dropTrigger,expanded:e.expandedKeys.indexOf(p)!==-1,selected:e.selectedKeys.indexOf(p)!==-1,openTransitionName:this.getOpenTransitionName(),openAnimation:o.openAnimation,filterTreeNode:this.filterTreeNode.bind(this)};return o.checkable&&(u.checkable=o.checkable,o.checkStrictly?(e.checkedKeys&&(u.checked=e.checkedKeys.indexOf(p)!==-1||!1),o.checkedKeys.halfChecked?u.halfChecked=o.checkedKeys.halfChecked.indexOf(p)!==-1||!1:u.halfChecked=!1):(this.checkedKeys&&(u.checked=this.checkedKeys.indexOf(p)!==-1||!1),u.halfChecked=this.halfCheckedKeys.indexOf(p)!==-1),this.treeNodesStates[t]&&(0,f["default"])(u,this.treeNodesStates[t].siblingPosition)),k["default"].cloneElement(n,u)},s.prototype.render=function(){var n=this,s=this.props,a={className:(0,y["default"])(s.className,s.prefixCls),role:"tree-node"};return s.focusable&&(a.tabIndex="0",a.onKeyDown=this.onKeyDown),s.checkable&&(this.checkedKeysChange||s.loadData)&&(s.checkStrictly?(this.treeNodesStates={},(0,g.loopAllChildren)(s.children,function(s,a,t,p,e){n.treeNodesStates[t]={siblingPosition:e}})):s._treeNodesStates?(this.treeNodesStates=s._treeNodesStates.treeNodesStates,this.halfCheckedKeys=s._treeNodesStates.halfCheckedKeys,this.checkedKeys=s._treeNodesStates.checkedKeys):!function(){var a=n.state.checkedKeys,t=void 0;!s.loadData&&n.checkKeys&&n._checkedKeys&&(0,g.arraysEqual)(n._checkedKeys,a)?t=n.checkKeys:!function(){var p=[];n.treeNodesStates={},(0,g.loopAllChildren)(s.children,function(s,t,e,o,c){n.treeNodesStates[e]={node:s,key:o,checked:!1,halfChecked:!1,siblingPosition:c},a.indexOf(o)!==-1&&(n.treeNodesStates[e].checked=!0,p.push(e))}),(0,g.handleCheckState)(n.treeNodesStates,(0,g.filterParentPosition)(p),!0),t=(0,g.getCheck)(n.treeNodesStates)}(),n.halfCheckedKeys=t.halfCheckedKeys,n.checkedKeys=t.checkedKeys}()),k["default"].createElement("ul",i({},a,{unselectable:!0,ref:"tree"}),k["default"].Children.map(s.children,this.renderTreeNode,this))},s}(k["default"].Component);m.propTypes={prefixCls:r.PropTypes.string,children:r.PropTypes.any,showLine:r.PropTypes.bool,showIcon:r.PropTypes.bool,selectable:r.PropTypes.bool,multiple:r.PropTypes.bool,checkable:r.PropTypes.oneOfType([r.PropTypes.bool,r.PropTypes.node]),_treeNodesStates:r.PropTypes.object,checkStrictly:r.PropTypes.bool,draggable:r.PropTypes.bool,autoExpandParent:r.PropTypes.bool,defaultExpandAll:r.PropTypes.bool,defaultExpandedKeys:r.PropTypes.arrayOf(r.PropTypes.string),expandedKeys:r.PropTypes.arrayOf(r.PropTypes.string),defaultCheckedKeys:r.PropTypes.arrayOf(r.PropTypes.string),checkedKeys:r.PropTypes.oneOfType([r.PropTypes.arrayOf(r.PropTypes.string),r.PropTypes.object]),defaultSelectedKeys:r.PropTypes.arrayOf(r.PropTypes.string),selectedKeys:r.PropTypes.arrayOf(r.PropTypes.string),onExpand:r.PropTypes.func,onCheck:r.PropTypes.func,onSelect:r.PropTypes.func,loadData:r.PropTypes.func,onMouseEnter:r.PropTypes.func,onMouseLeave:r.PropTypes.func,onRightClick:r.PropTypes.func,onDragStart:r.PropTypes.func,onDragEnter:r.PropTypes.func,onDragOver:r.PropTypes.func,onDragLeave:r.PropTypes.func,onDrop:r.PropTypes.func,onDragEnd:r.PropTypes.func,filterTreeNode:r.PropTypes.func,openTransitionName:r.PropTypes.string,openAnimation:r.PropTypes.oneOfType([r.PropTypes.string,r.PropTypes.object])},m.defaultProps={prefixCls:"rc-tree",showLine:!1,showIcon:!0,selectable:!0,multiple:!1,checkable:!1,checkStrictly:!1,draggable:!1,autoExpandParent:!0,defaultExpandAll:!1,defaultExpandedKeys:[],defaultCheckedKeys:[],defaultSelectedKeys:[],onExpand:l,onCheck:l,onSelect:l,onDragStart:l,onDragEnter:l,onDragOver:l,onDragLeave:l,onDrop:l,onDragEnd:l},s["default"]=m,n.exports=s["default"]},537:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}function p(n,s){for(var a=Object.getOwnPropertyNames(s),t=0;t<a.length;t++){var p=a[t],e=Object.getOwnPropertyDescriptor(s,p);e&&e.configurable&&void 0===n[p]&&Object.defineProperty(n,p,e)}return n}function e(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function c(n,s){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!s||"object"!=typeof s&&"function"!=typeof s?n:s}function u(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function, not "+typeof s);n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),s&&(Object.setPrototypeOf?Object.setPrototypeOf(n,s):p(n,s))}Object.defineProperty(s,"__esModule",{value:!0});var l=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n},i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol?"symbol":typeof n},r=a(1),k=t(r),d=a(10),f=t(d),h=a(3),y=t(h),g=a(34),m=t(g),v=a(352),K="undefined"!=typeof window?(0,v.browser)(window.navigator):"",w=/.*(IE|Edge).+/.test(K),x="---",b=function(n){function s(a){o(this,s);var t=c(this,n.call(this,a));return["onExpand","onCheck","onContextMenu","onMouseEnter","onMouseLeave","onDragStart","onDragEnter","onDragOver","onDragLeave","onDrop","onDragEnd"].forEach(function(n){t[n]=t[n].bind(t)}),t.state={dataLoading:!1,dragNodeHighlight:!1},t}return u(s,n),s.prototype.componentDidMount=function(){this.props.root._treeNodeInstances||(this.props.root._treeNodeInstances=[]),this.props.root._treeNodeInstances.push(this)},s.prototype.onCheck=function(){this.props.root.onCheck(this)},s.prototype.onSelect=function(){this.props.root.onSelect(this)},s.prototype.onMouseEnter=function(n){n.preventDefault(),this.props.root.onMouseEnter(n,this)},s.prototype.onMouseLeave=function(n){n.preventDefault(),this.props.root.onMouseLeave(n,this)},s.prototype.onContextMenu=function(n){n.preventDefault(),this.props.root.onContextMenu(n,this)},s.prototype.onDragStart=function(n){n.stopPropagation(),this.setState({dragNodeHighlight:!0}),this.props.root.onDragStart(n,this);try{n.dataTransfer.setData("text/plain","")}finally{}},s.prototype.onDragEnter=function(n){n.preventDefault(),n.stopPropagation(),this.props.root.onDragEnter(n,this)},s.prototype.onDragOver=function(n){return n.preventDefault(),n.stopPropagation(),this.props.root.onDragOver(n,this),!1},s.prototype.onDragLeave=function(n){n.stopPropagation(),this.props.root.onDragLeave(n,this)},s.prototype.onDrop=function(n){n.preventDefault(),n.stopPropagation(),this.setState({dragNodeHighlight:!1}),this.props.root.onDrop(n,this)},s.prototype.onDragEnd=function(n){n.stopPropagation(),this.setState({dragNodeHighlight:!1}),this.props.root.onDragEnd(n,this)},s.prototype.onExpand=function(){var n=this,s=this.props.root.onExpand(this);s&&"object"===("undefined"==typeof s?"undefined":i(s))&&!function(){var a=function(s){n.setState({dataLoading:s})};a(!0),s.then(function(){a(!1)},function(){a(!1)})}()},s.prototype.onKeyDown=function(n){n.preventDefault()},s.prototype.renderSwitcher=function(n,s){var a=n.prefixCls,t=e({},a+"-switcher",!0);return n.showLine?"0-0"===n.pos?t[a+"-roots_"+s]=!0:(t[a+"-center_"+s]=!n.last,t[a+"-bottom_"+s]=n.last):t[a+"-noline_"+s]=!0,n.disabled?(t[a+"-switcher-disabled"]=!0,k["default"].createElement("span",{className:(0,y["default"])(t)})):k["default"].createElement("span",{className:(0,y["default"])(t),onClick:this.onExpand})},s.prototype.renderCheckbox=function(n){var s=n.prefixCls,a=e({},s+"-checkbox",!0);n.checked?a[s+"-checkbox-checked"]=!0:n.halfChecked&&(a[s+"-checkbox-indeterminate"]=!0);var t=null;return"boolean"!=typeof n.checkable&&(t=n.checkable),n.disabled||n.disableCheckbox?(a[s+"-checkbox-disabled"]=!0,k["default"].createElement("span",{ref:"checkbox",className:(0,y["default"])(a)},t)):k["default"].createElement("span",{ref:"checkbox",className:(0,y["default"])(a),onClick:this.onCheck},t)},s.prototype.renderChildren=function(n){var a=this.renderFirst;this.renderFirst=1;var t=!0;!a&&n.expanded&&(t=!1);var p=n.children,o=p;if(p&&(p.type===s||Array.isArray(p)&&p.every(function(n){return n.type===s}))){var c,u=(c={},e(c,n.prefixCls+"-child-tree",!0),e(c,n.prefixCls+"-child-tree-open",n.expanded),c);n.showLine&&(u[n.prefixCls+"-line"]=!n.last);var r={};n.openTransitionName?r.transitionName=n.openTransitionName:"object"===i(n.openAnimation)&&(r.animation=(0,f["default"])({},n.openAnimation),t||delete r.animation.appear),o=k["default"].createElement(m["default"],l({},r,{showProp:"data-expanded",transitionAppear:t,component:""}),n.expanded?k["default"].createElement("ul",{className:(0,y["default"])(u),"data-expanded":n.expanded},k["default"].Children.map(p,function(s,a){return n.root.renderTreeNode(s,a,n.pos)},n.root)):null)}return o},s.prototype.render=function(){var n,s=this,a=this.props,t=a.prefixCls,p=a.expanded?"open":"close",o=(n={},e(n,t+"-iconEle",!0),e(n,t+"-icon_loading",this.state.dataLoading),e(n,t+"-icon__"+p,!0),n),c=!0,u=a.title,i=this.renderChildren(a);i&&i!==a.children||(i=null,a.loadData&&!a.isLeaf||(c=!1));var r=function(){var n=a.showIcon||a.loadData&&s.state.dataLoading?k["default"].createElement("span",{className:(0,y["default"])(o)}):null,p=k["default"].createElement("span",{className:t+"-title"},u),e={className:t+"-node-content-wrapper"};return a.disabled||((a.selected||!a._dropTrigger&&s.state.dragNodeHighlight)&&(e.className+=" "+t+"-node-selected"),e.onClick=function(n){n.preventDefault(),a.selectable&&s.onSelect()},a.onRightClick&&(e.onContextMenu=s.onContextMenu),a.onMouseEnter&&(e.onMouseEnter=s.onMouseEnter),a.onMouseLeave&&(e.onMouseLeave=s.onMouseLeave),a.draggable&&(e.className+=" draggable",w&&(e.href="#"),e.draggable=!0,e["aria-grabbed"]=!0,e.onDragStart=s.onDragStart)),k["default"].createElement("a",l({ref:"selectHandle",title:"string"==typeof u?u:""},e),n,p)},d={};a.draggable&&(d.onDragEnter=this.onDragEnter,d.onDragOver=this.onDragOver,d.onDragLeave=this.onDragLeave,d.onDrop=this.onDrop,d.onDragEnd=this.onDragEnd);var f="",h="";a.disabled?f=t+"-treenode-disabled":a.dragOver?h="drag-over":a.dragOverGapTop?h="drag-over-gap-top":a.dragOverGapBottom&&(h="drag-over-gap-bottom");var g=a.filterTreeNode(this)?"filter-node":"",m=function(){var n,s=(n={},e(n,t+"-switcher",!0),e(n,t+"-switcher-noop",!0),n);return a.showLine?(s[t+"-center_docu"]=!a.last,s[t+"-bottom_docu"]=a.last):s[t+"-noline_docu"]=!0,k["default"].createElement("span",{className:(0,y["default"])(s)})};return k["default"].createElement("li",l({},d,{ref:"li",className:(0,y["default"])(a.className,f,h,g)}),c?this.renderSwitcher(a,p):m(),a.checkable?this.renderCheckbox(a):null,r(),i)},s}(k["default"].Component);b.isTreeNode=1,b.propTypes={prefixCls:r.PropTypes.string,disabled:r.PropTypes.bool,disableCheckbox:r.PropTypes.bool,expanded:r.PropTypes.bool,isLeaf:r.PropTypes.bool,root:r.PropTypes.object,onSelect:r.PropTypes.func},b.defaultProps={title:x},s["default"]=b,n.exports=s["default"]},538:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(s,"__esModule",{value:!0});var p=a(536),e=t(p),o=a(537),c=t(o);e["default"].TreeNode=c["default"],s["default"]=e["default"],n.exports=s["default"]},1048:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}var p=(a(368),a(367)),e=t(p),o=a(1),c=t(o),u=a(2);t(u);n.exports={content:{"zh-CN":[["p","\u53d7\u63a7\u64cd\u4f5c\u793a\u4f8b"]],"en-US":[["p","basic controlled example"]]},meta:{order:1,title:{"zh-CN":"\u53d7\u63a7\u64cd\u4f5c\u793a\u4f8b","en-US":"basic controlled example"},filename:"components/tree/demo/basic-controlled.md",id:"components-tree-demo-basic-controlled"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Tree <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'antd\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> TreeNode <span class="token operator" >=</span> Tree<span class="token punctuation" >.</span>TreeNode<span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> x <span class="token operator" >=</span> <span class="token number" >3</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> y <span class="token operator" >=</span> <span class="token number" >2</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> z <span class="token operator" >=</span> <span class="token number" >1</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> gData <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> generateData <span class="token operator" >=</span> <span class="token punctuation" >(</span>_level<span class="token punctuation" >,</span> _preKey<span class="token punctuation" >,</span> _tns<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >const</span> preKey <span class="token operator" >=</span> _preKey <span class="token operator" >||</span> <span class="token string" >\'0\'</span><span class="token punctuation" >;</span>\n  <span class="token keyword" >const</span> tns <span class="token operator" >=</span> _tns <span class="token operator" >||</span> gData<span class="token punctuation" >;</span>\n\n  <span class="token keyword" >const</span> children <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n  <span class="token keyword" >for</span> <span class="token punctuation" >(</span><span class="token keyword" >let</span> i <span class="token operator" >=</span> <span class="token number" >0</span><span class="token punctuation" >;</span> i <span class="token operator" >&lt;</span> x<span class="token punctuation" >;</span> i<span class="token operator" >++</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> key <span class="token operator" >=</span> <span class="token template-string" ><span class="token string" >`</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>preKey<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >-</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>i<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >`</span></span><span class="token punctuation" >;</span>\n    tns<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> title<span class="token punctuation" >:</span> key<span class="token punctuation" >,</span> key <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span>i <span class="token operator" >&lt;</span> y<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      children<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span>key<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n  <span class="token keyword" >if</span> <span class="token punctuation" >(</span>_level <span class="token operator" >&lt;</span> <span class="token number" >0</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> tns<span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n  <span class="token keyword" >const</span> level <span class="token operator" >=</span> _level <span class="token operator" >-</span> <span class="token number" >1</span><span class="token punctuation" >;</span>\n  children<span class="token punctuation" >.</span><span class="token function" >forEach</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>key<span class="token punctuation" >,</span> index<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n    tns<span class="token punctuation" >[</span>index<span class="token punctuation" >]</span><span class="token punctuation" >.</span>children <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >return</span> <span class="token function" >generateData</span><span class="token punctuation" >(</span>level<span class="token punctuation" >,</span> key<span class="token punctuation" >,</span> tns<span class="token punctuation" >[</span>index<span class="token punctuation" >]</span><span class="token punctuation" >.</span>children<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n<span class="token function" >generateData</span><span class="token punctuation" >(</span>z<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> Demo <span class="token operator" >=</span> React<span class="token punctuation" >.</span><span class="token function" >createClass</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  <span class="token function" >getInitialState</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >{</span>\n      expandedKeys<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'0-0-0\'</span><span class="token punctuation" >,</span> <span class="token string" >\'0-0-1\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      autoExpandParent<span class="token punctuation" >:</span> <span class="token boolean" >true</span><span class="token punctuation" >,</span>\n      checkedKeys<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'0-0-0\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      selectedKeys<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onExpand</span><span class="token punctuation" >(</span>expandedKeys<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span><span class="token string" >\'onExpand\'</span><span class="token punctuation" >,</span> arguments<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token comment" spellcheck="true">// if not set autoExpandParent to false, if children expanded, parent can not collapse.</span>\n    <span class="token comment" spellcheck="true">// or, you can remove all expanded children keys.</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      expandedKeys<span class="token punctuation" >,</span>\n      autoExpandParent<span class="token punctuation" >:</span> <span class="token boolean" >false</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onCheck</span><span class="token punctuation" >(</span>checkedKeys<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      checkedKeys<span class="token punctuation" >,</span>\n      selectedKeys<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'0-3\'</span><span class="token punctuation" >,</span> <span class="token string" >\'0-4\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onSelect</span><span class="token punctuation" >(</span>selectedKeys<span class="token punctuation" >,</span> info<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span><span class="token string" >\'onSelect\'</span><span class="token punctuation" >,</span> info<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> selectedKeys <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >render</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> loop <span class="token operator" >=</span> data <span class="token operator" >=</span><span class="token operator" >></span> data<span class="token punctuation" >.</span><span class="token function" >map</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n          <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >key</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token attr-name" >disableCheckbox</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key <span class="token operator" >===</span> <span class="token string" >\'0-0-0\'</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n            <span class="token punctuation" >{</span><span class="token function" >loop</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span><span class="token punctuation" >}</span>\n          <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>TreeNode</span><span class="token punctuation" >></span></span>\n        <span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span>\n      <span class="token keyword" >return</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >key</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token punctuation" >/></span></span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Tree</span>\n        <span class="token attr-name" >checkable</span>\n        <span class="token attr-name" >onExpand</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onExpand<span class="token punctuation" >}</span></span> <span class="token attr-name" >expandedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>expandedKeys<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >autoExpandParent</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>autoExpandParent<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >onCheck</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onCheck<span class="token punctuation" >}</span></span> <span class="token attr-name" >checkedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>checkedKeys<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >onSelect</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onSelect<span class="token punctuation" >}</span></span> <span class="token attr-name" >selectedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>selectedKeys<span class="token punctuation" >}</span></span>\n      <span class="token punctuation" >></span></span>\n        <span class="token punctuation" >{</span><span class="token function" >loop</span><span class="token punctuation" >(</span>gData<span class="token punctuation" >)</span><span class="token punctuation" >}</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Tree</span><span class="token punctuation" >></span></span>\n    <span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n\nReactDOM<span class="token punctuation" >.</span><span class="token function" >render</span><span class="token punctuation" >(</span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Demo</span> <span class="token punctuation" >/></span></span><span class="token punctuation" >,</span> mountNode<span class="token punctuation" >)</span><span class="token punctuation" >;</span>'
}],preview:function(){var n=e["default"].TreeNode,s=3,a=2,t=1,p=[],o=function l(n,t,e){for(var o=t||"0",c=e||p,u=[],i=0;i<s;i++){var r=o+"-"+i;c.push({title:r,key:r}),i<a&&u.push(r)}if(n<0)return c;var k=n-1;u.forEach(function(n,s){return c[s].children=[],l(k,n,c[s].children)})};o(t);var u=c["default"].createClass({displayName:"Demo",getInitialState:function(){return{expandedKeys:["0-0-0","0-0-1"],autoExpandParent:!0,checkedKeys:["0-0-0"],selectedKeys:[]}},onExpand:function(n){console.log("onExpand",arguments),this.setState({expandedKeys:n,autoExpandParent:!1})},onCheck:function(n){this.setState({checkedKeys:n,selectedKeys:["0-3","0-4"]})},onSelect:function(n,s){console.log("onSelect",s),this.setState({selectedKeys:n})},render:function(){var s=function a(s){return s.map(function(s){return s.children?c["default"].createElement(n,{key:s.key,title:s.key,disableCheckbox:"0-0-0"===s.key},a(s.children)):c["default"].createElement(n,{key:s.key,title:s.key})})};return c["default"].createElement(e["default"],{checkable:!0,onExpand:this.onExpand,expandedKeys:this.state.expandedKeys,autoExpandParent:this.state.autoExpandParent,onCheck:this.onCheck,checkedKeys:this.state.checkedKeys,onSelect:this.onSelect,selectedKeys:this.state.selectedKeys},s(p))}});return c["default"].createElement(u,null)}}},1049:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}var p=(a(368),a(367)),e=t(p),o=a(1),c=t(o),u=a(2);t(u);n.exports={content:{"zh-CN":[["p","\u6700\u7b80\u5355\u7684\u7528\u6cd5\uff0c\u5c55\u793a\u53ef\u52fe\u9009\uff0c\u53ef\u9009\u4e2d\uff0c\u7981\u7528\uff0c\u9ed8\u8ba4\u5c55\u5f00\u7b49\u529f\u80fd\u3002"]],"en-US":[["p","The most basic usage, tell you how to use checkable, selectable, disabled, defaultExpandKeys, and etc."]]},meta:{order:0,title:{"zh-CN":"\u57fa\u672c","en-US":"basic"},filename:"components/tree/demo/basic.md",id:"components-tree-demo-basic"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Tree <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'antd\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> TreeNode <span class="token operator" >=</span> Tree<span class="token punctuation" >.</span>TreeNode<span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> Demo <span class="token operator" >=</span> React<span class="token punctuation" >.</span><span class="token function" >createClass</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  <span class="token function" >getDefaultProps</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >{</span>\n      keys<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'0-0-0\'</span><span class="token punctuation" >,</span> <span class="token string" >\'0-0-1\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >getInitialState</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> keys <span class="token operator" >=</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>keys<span class="token punctuation" >;</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >{</span>\n      defaultExpandedKeys<span class="token punctuation" >:</span> keys<span class="token punctuation" >,</span>\n      defaultSelectedKeys<span class="token punctuation" >:</span> keys<span class="token punctuation" >,</span>\n      defaultCheckedKeys<span class="token punctuation" >:</span> keys<span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onSelect</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span><span class="token string" >\'selected\'</span><span class="token punctuation" >,</span> info<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onCheck</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span><span class="token string" >\'onCheck\'</span><span class="token punctuation" >,</span> info<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >render</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Tree</span> <span class="token attr-name" >className</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>myCls<span class="token punctuation" >"</span></span> <span class="token attr-name" >showLine</span> <span class="token attr-name" >checkable</span>\n        <span class="token attr-name" >defaultExpandedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>defaultExpandedKeys<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >defaultSelectedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>defaultSelectedKeys<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >defaultCheckedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>defaultCheckedKeys<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >onSelect</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onSelect<span class="token punctuation" >}</span></span> <span class="token attr-name" >onCheck</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onCheck<span class="token punctuation" >}</span></span>\n      <span class="token punctuation" >></span></span>\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>parent</span> <span class="token attr-name" >1"</span> <span class="token attr-name" >key</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>0-0<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n          <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>parent</span> <span class="token attr-name" >1-0"</span> <span class="token attr-name" >key</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>0-0-0<span class="token punctuation" >"</span></span> <span class="token attr-name" >disabled</span><span class="token punctuation" >></span></span>\n            <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>leaf<span class="token punctuation" >"</span></span> <span class="token attr-name" >key</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>0-0-0-0<span class="token punctuation" >"</span></span> <span class="token attr-name" >disableCheckbox</span> <span class="token punctuation" >/></span></span>\n            <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>leaf<span class="token punctuation" >"</span></span> <span class="token attr-name" >key</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>0-0-0-1<span class="token punctuation" >"</span></span> <span class="token punctuation" >/></span></span>\n          <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>TreeNode</span><span class="token punctuation" >></span></span>\n          <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>parent</span> <span class="token attr-name" >1-1"</span> <span class="token attr-name" >key</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>0-0-1<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n            <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token operator" >&lt;</span>span style<span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token punctuation" >{</span> color<span class="token punctuation" >:</span> <span class="token string" >\'#08c\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>sss<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>span</span><span class="token punctuation" >></span></span><span class="token punctuation" >}</span> key<span class="token operator" >=</span><span class="token string" >"0-0-1-0"</span> <span class="token operator" >/</span><span class="token operator" >></span>\n          <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>TreeNode</span><span class="token punctuation" >></span></span>\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>TreeNode</span><span class="token punctuation" >></span></span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Tree</span><span class="token punctuation" >></span></span>\n    <span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n\nReactDOM<span class="token punctuation" >.</span><span class="token function" >render</span><span class="token punctuation" >(</span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Demo</span> <span class="token punctuation" >/></span></span><span class="token punctuation" >,</span> mountNode<span class="token punctuation" >)</span><span class="token punctuation" >;</span>'}],preview:function(){var n=e["default"].TreeNode,s=c["default"].createClass({displayName:"Demo",getDefaultProps:function(){return{keys:["0-0-0","0-0-1"]}},getInitialState:function(){var n=this.props.keys;return{defaultExpandedKeys:n,defaultSelectedKeys:n,defaultCheckedKeys:n}},onSelect:function(n){console.log("selected",n)},onCheck:function(n){console.log("onCheck",n)},render:function(){return c["default"].createElement(e["default"],{className:"myCls",showLine:!0,checkable:!0,defaultExpandedKeys:this.state.defaultExpandedKeys,defaultSelectedKeys:this.state.defaultSelectedKeys,defaultCheckedKeys:this.state.defaultCheckedKeys,onSelect:this.onSelect,onCheck:this.onCheck},c["default"].createElement(n,{title:"parent 1",key:"0-0"},c["default"].createElement(n,{title:"parent 1-0",key:"0-0-0",disabled:!0},c["default"].createElement(n,{title:"leaf",key:"0-0-0-0",disableCheckbox:!0}),c["default"].createElement(n,{title:"leaf",key:"0-0-0-1"})),c["default"].createElement(n,{title:"parent 1-1",key:"0-0-1"},c["default"].createElement(n,{title:c["default"].createElement("span",{style:{color:"#08c"}},"sss"),key:"0-0-1-0"}))))}});return c["default"].createElement(s,null)}}},1050:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}var p=a(61),e=t(p),o=(a(368),a(367)),c=t(o),u=a(1),l=t(u),i=a(2);t(i);n.exports={content:{"zh-CN":[["p","\u5c06\u8282\u70b9\u62d6\u62fd\u5230\u5176\u4ed6\u8282\u70b9\u5185\u90e8\u6216\u524d\u540e\u3002"]],"en-US":[["p","Drag treeNode to insert after the other treeNode or insert into the other parent TreeNode."]]},meta:{order:2,title:{"zh-CN":"\u62d6\u52a8\u793a\u4f8b","en-US":"draggable"},filename:"components/tree/demo/draggable.md",id:"components-tree-demo-draggable"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Tree <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'antd\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> TreeNode <span class="token operator" >=</span> Tree<span class="token punctuation" >.</span>TreeNode<span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> x <span class="token operator" >=</span> <span class="token number" >3</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> y <span class="token operator" >=</span> <span class="token number" >2</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> z <span class="token operator" >=</span> <span class="token number" >1</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> gData <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> generateData <span class="token operator" >=</span> <span class="token punctuation" >(</span>_level<span class="token punctuation" >,</span> _preKey<span class="token punctuation" >,</span> _tns<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >const</span> preKey <span class="token operator" >=</span> _preKey <span class="token operator" >||</span> <span class="token string" >\'0\'</span><span class="token punctuation" >;</span>\n  <span class="token keyword" >const</span> tns <span class="token operator" >=</span> _tns <span class="token operator" >||</span> gData<span class="token punctuation" >;</span>\n\n  <span class="token keyword" >const</span> children <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n  <span class="token keyword" >for</span> <span class="token punctuation" >(</span><span class="token keyword" >let</span> i <span class="token operator" >=</span> <span class="token number" >0</span><span class="token punctuation" >;</span> i <span class="token operator" >&lt;</span> x<span class="token punctuation" >;</span> i<span class="token operator" >++</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> key <span class="token operator" >=</span> <span class="token template-string" ><span class="token string" >`</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>preKey<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >-</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>i<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >`</span></span><span class="token punctuation" >;</span>\n    tns<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> title<span class="token punctuation" >:</span> key<span class="token punctuation" >,</span> key <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span>i <span class="token operator" >&lt;</span> y<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      children<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span>key<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n  <span class="token keyword" >if</span> <span class="token punctuation" >(</span>_level <span class="token operator" >&lt;</span> <span class="token number" >0</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> tns<span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n  <span class="token keyword" >const</span> level <span class="token operator" >=</span> _level <span class="token operator" >-</span> <span class="token number" >1</span><span class="token punctuation" >;</span>\n  children<span class="token punctuation" >.</span><span class="token function" >forEach</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>key<span class="token punctuation" >,</span> index<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n    tns<span class="token punctuation" >[</span>index<span class="token punctuation" >]</span><span class="token punctuation" >.</span>children <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >return</span> <span class="token function" >generateData</span><span class="token punctuation" >(</span>level<span class="token punctuation" >,</span> key<span class="token punctuation" >,</span> tns<span class="token punctuation" >[</span>index<span class="token punctuation" >]</span><span class="token punctuation" >.</span>children<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n<span class="token function" >generateData</span><span class="token punctuation" >(</span>z<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >const</span> Demo <span class="token operator" >=</span> React<span class="token punctuation" >.</span><span class="token function" >createClass</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  <span class="token function" >getInitialState</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >{</span>\n      gData<span class="token punctuation" >,</span>\n      expandedKeys<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'0-0\'</span><span class="token punctuation" >,</span> <span class="token string" >\'0-0-0\'</span><span class="token punctuation" >,</span> <span class="token string" >\'0-0-0-0\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onDragEnter</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token comment" spellcheck="true">// expandedKeys \u9700\u8981\u53d7\u63a7\u65f6\u8bbe\u7f6e</span>\n    <span class="token comment" spellcheck="true">// this.setState({</span>\n    <span class="token comment" spellcheck="true">//   expandedKeys: info.expandedKeys,</span>\n    <span class="token comment" spellcheck="true">// });</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onDrop</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >const</span> dropKey <span class="token operator" >=</span> info<span class="token punctuation" >.</span>node<span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>eventKey<span class="token punctuation" >;</span>\n    <span class="token keyword" >const</span> dragKey <span class="token operator" >=</span> info<span class="token punctuation" >.</span>dragNode<span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>eventKey<span class="token punctuation" >;</span>\n    <span class="token comment" spellcheck="true">// const dragNodesKeys = info.dragNodesKeys;</span>\n    <span class="token keyword" >const</span> loop <span class="token operator" >=</span> <span class="token punctuation" >(</span>data<span class="token punctuation" >,</span> key<span class="token punctuation" >,</span> callback<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      data<span class="token punctuation" >.</span><span class="token function" >forEach</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >,</span> index<span class="token punctuation" >,</span> arr<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>key <span class="token operator" >===</span> key<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >return</span> <span class="token function" >callback</span><span class="token punctuation" >(</span>item<span class="token punctuation" >,</span> index<span class="token punctuation" >,</span> arr<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n        <span class="token punctuation" >}</span>\n        <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >return</span> <span class="token function" >loop</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >,</span> key<span class="token punctuation" >,</span> callback<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n        <span class="token punctuation" >}</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >const</span> data <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >.</span><span class="token punctuation" >.</span><span class="token punctuation" >.</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>gData<span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >let</span> dragObj<span class="token punctuation" >;</span>\n    <span class="token function" >loop</span><span class="token punctuation" >(</span>data<span class="token punctuation" >,</span> dragKey<span class="token punctuation" >,</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >,</span> index<span class="token punctuation" >,</span> arr<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      arr<span class="token punctuation" >.</span><span class="token function" >splice</span><span class="token punctuation" >(</span>index<span class="token punctuation" >,</span> <span class="token number" >1</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n      dragObj <span class="token operator" >=</span> item<span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span>info<span class="token punctuation" >.</span>dropToGap<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >let</span> ar<span class="token punctuation" >;</span>\n      <span class="token keyword" >let</span> i<span class="token punctuation" >;</span>\n      <span class="token function" >loop</span><span class="token punctuation" >(</span>data<span class="token punctuation" >,</span> dropKey<span class="token punctuation" >,</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >,</span> index<span class="token punctuation" >,</span> arr<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n        ar <span class="token operator" >=</span> arr<span class="token punctuation" >;</span>\n        i <span class="token operator" >=</span> index<span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n      ar<span class="token punctuation" >.</span><span class="token function" >splice</span><span class="token punctuation" >(</span>i<span class="token punctuation" >,</span> <span class="token number" >0</span><span class="token punctuation" >,</span> dragObj<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token punctuation" >{</span>\n      <span class="token function" >loop</span><span class="token punctuation" >(</span>data<span class="token punctuation" >,</span> dropKey<span class="token punctuation" >,</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n        item<span class="token punctuation" >.</span>children <span class="token operator" >=</span> item<span class="token punctuation" >.</span>children <span class="token operator" >||</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n        <span class="token comment" spellcheck="true">// where to insert \u793a\u4f8b\u6dfb\u52a0\u5230\u5c3e\u90e8\uff0c\u53ef\u4ee5\u662f\u968f\u610f\u4f4d\u7f6e</span>\n        item<span class="token punctuation" >.</span>children<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span>dragObj<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      gData<span class="token punctuation" >:</span> data<span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >render</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> loop <span class="token operator" >=</span> data <span class="token operator" >=</span><span class="token operator" >></span> data<span class="token punctuation" >.</span><span class="token function" >map</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children <span class="token operator" >&amp;&amp;</span> item<span class="token punctuation" >.</span>children<span class="token punctuation" >.</span>length<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >return</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >key</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span><span class="token punctuation" >{</span><span class="token function" >loop</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span><span class="token punctuation" >}</span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>TreeNode</span><span class="token punctuation" >></span></span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span>\n      <span class="token keyword" >return</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >key</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token punctuation" >/></span></span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Tree</span>\n        <span class="token attr-name" >defaultExpandedKeys</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>expandedKeys<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >draggable</span>\n        <span class="token attr-name" >onDragEnter</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onDragEnter<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >onDrop</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onDrop<span class="token punctuation" >}</span></span>\n      <span class="token punctuation" >></span></span>\n        <span class="token punctuation" >{</span><span class="token function" >loop</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>gData<span class="token punctuation" >)</span><span class="token punctuation" >}</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Tree</span><span class="token punctuation" >></span></span>\n    <span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n\nReactDOM<span class="token punctuation" >.</span><span class="token function" >render</span><span class="token punctuation" >(</span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Demo</span> <span class="token punctuation" >/></span></span><span class="token punctuation" >,</span> mountNode<span class="token punctuation" >)</span><span class="token punctuation" >;</span>'
}],preview:function(){var n=c["default"].TreeNode,s=3,a=2,t=1,p=[],o=function i(n,t,e){for(var o=t||"0",c=e||p,u=[],l=0;l<s;l++){var r=o+"-"+l;c.push({title:r,key:r}),l<a&&u.push(r)}if(n<0)return c;var k=n-1;u.forEach(function(n,s){return c[s].children=[],i(k,n,c[s].children)})};o(t);var u=l["default"].createClass({displayName:"Demo",getInitialState:function(){return{gData:p,expandedKeys:["0-0","0-0-0","0-0-0-0"]}},onDragEnter:function(n){console.log(n)},onDrop:function(n){console.log(n);var s=n.node.props.eventKey,a=n.dragNode.props.eventKey,t=function l(n,s,a){n.forEach(function(n,t,p){return n.key===s?a(n,t,p):n.children?l(n.children,s,a):void 0})},p=[].concat((0,e["default"])(this.state.gData)),o=void 0;if(t(p,a,function(n,s,a){a.splice(s,1),o=n}),n.dropToGap){var c=void 0,u=void 0;t(p,s,function(n,s,a){c=a,u=s}),c.splice(u,0,o)}else t(p,s,function(n){n.children=n.children||[],n.children.push(o)});this.setState({gData:p})},render:function(){var s=function a(s){return s.map(function(s){return s.children&&s.children.length?l["default"].createElement(n,{key:s.key,title:s.key},a(s.children)):l["default"].createElement(n,{key:s.key,title:s.key})})};return l["default"].createElement(c["default"],{defaultExpandedKeys:this.state.expandedKeys,draggable:!0,onDragEnter:this.onDragEnter,onDrop:this.onDrop},s(this.state.gData))}});return l["default"].createElement(u,null)}}},1051:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}var p=a(61),e=t(p),o=(a(368),a(367)),c=t(o),u=a(1),l=t(u),i=a(2);t(i);n.exports={content:{"zh-CN":[["p","\u70b9\u51fb\u5c55\u5f00\u8282\u70b9\uff0c\u52a8\u6001\u52a0\u8f7d\u6570\u636e\u3002"]],"en-US":[["p","To load data asynchronously when click to expand a treeNode."]]},meta:{order:3,title:{"zh-CN":"\u5f02\u6b65\u6570\u636e\u52a0\u8f7d","en-US":"load data asynchronously"},filename:"components/tree/demo/dynamic.md",id:"components-tree-demo-dynamic"},toc:["ul",["li",["a",{href:"#zh-CN"},"zh-CN"]],["li",["a",{href:"#en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Tree <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'antd\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >const</span> TreeNode <span class="token operator" >=</span> Tree<span class="token punctuation" >.</span>TreeNode<span class="token punctuation" >;</span>\n\n<span class="token keyword" >function</span> <span class="token function" >generateTreeNodes</span><span class="token punctuation" >(</span>treeNode<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >const</span> arr <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n  <span class="token keyword" >const</span> key <span class="token operator" >=</span> treeNode<span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>eventKey<span class="token punctuation" >;</span>\n  <span class="token keyword" >for</span> <span class="token punctuation" >(</span><span class="token keyword" >let</span> i <span class="token operator" >=</span> <span class="token number" >0</span><span class="token punctuation" >;</span> i <span class="token operator" >&lt;</span> <span class="token number" >3</span><span class="token punctuation" >;</span> i<span class="token operator" >++</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    arr<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token template-string" ><span class="token string" >`leaf </span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>key<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >-</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>i<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >`</span></span><span class="token punctuation" >,</span> key<span class="token punctuation" >:</span> <span class="token template-string" ><span class="token string" >`</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>key<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >-</span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>i<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" >`</span></span> <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n  <span class="token keyword" >return</span> arr<span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>\n\n<span class="token keyword" >function</span> <span class="token function" >setLeaf</span><span class="token punctuation" >(</span>treeData<span class="token punctuation" >,</span> curKey<span class="token punctuation" >,</span> level<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >const</span> loopLeaf <span class="token operator" >=</span> <span class="token punctuation" >(</span>data<span class="token punctuation" >,</span> lev<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> l <span class="token operator" >=</span> lev <span class="token operator" >-</span> <span class="token number" >1</span><span class="token punctuation" >;</span>\n    data<span class="token punctuation" >.</span><span class="token function" >forEach</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >.</span>length <span class="token operator" >></span> curKey<span class="token punctuation" >.</span>length<span class="token punctuation" >)</span> <span class="token operator" >?</span> item<span class="token punctuation" >.</span>key<span class="token punctuation" >.</span><span class="token function" >indexOf</span><span class="token punctuation" >(</span>curKey<span class="token punctuation" >)</span> <span class="token operator" >!==</span> <span class="token number" >0</span> <span class="token punctuation" >:</span>\n        curKey<span class="token punctuation" >.</span><span class="token function" >indexOf</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >)</span> <span class="token operator" >!==</span> <span class="token number" >0</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >return</span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span>\n      <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        <span class="token function" >loopLeaf</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >,</span> l<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token keyword" >if</span> <span class="token punctuation" >(</span>l <span class="token operator" >&lt;</span> <span class="token number" >1</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        item<span class="token punctuation" >.</span>isLeaf <span class="token operator" >=</span> <span class="token boolean" >true</span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token function" >loopLeaf</span><span class="token punctuation" >(</span>treeData<span class="token punctuation" >,</span> level <span class="token operator" >+</span> <span class="token number" >1</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>\n\n<span class="token keyword" >function</span> <span class="token function" >getNewTreeData</span><span class="token punctuation" >(</span>treeData<span class="token punctuation" >,</span> curKey<span class="token punctuation" >,</span> child<span class="token punctuation" >,</span> level<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >const</span> loop <span class="token operator" >=</span> <span class="token punctuation" >(</span>data<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span>level <span class="token operator" >&lt;</span> <span class="token number" >1</span> <span class="token operator" >||</span> curKey<span class="token punctuation" >.</span>length <span class="token operator" >-</span> <span class="token number" >3</span> <span class="token operator" >></span> level <span class="token operator" >*</span> <span class="token number" >2</span><span class="token punctuation" >)</span> <span class="token keyword" >return</span><span class="token punctuation" >;</span>\n    data<span class="token punctuation" >.</span><span class="token function" >forEach</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >if</span> <span class="token punctuation" >(</span>curKey<span class="token punctuation" >.</span><span class="token function" >indexOf</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >)</span> <span class="token operator" >===</span> <span class="token number" >0</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n          <span class="token function" >loop</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n        <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token punctuation" >{</span>\n          item<span class="token punctuation" >.</span>children <span class="token operator" >=</span> child<span class="token punctuation" >;</span>\n        <span class="token punctuation" >}</span>\n      <span class="token punctuation" >}</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token function" >loop</span><span class="token punctuation" >(</span>treeData<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token function" >setLeaf</span><span class="token punctuation" >(</span>treeData<span class="token punctuation" >,</span> curKey<span class="token punctuation" >,</span> level<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>\n\n<span class="token keyword" >const</span> Demo <span class="token operator" >=</span> React<span class="token punctuation" >.</span><span class="token function" >createClass</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  <span class="token function" >getInitialState</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >{</span>\n      treeData<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >componentDidMount</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token function" >setTimeout</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n        treeData<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n          <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'pNode 01\'</span><span class="token punctuation" >,</span> key<span class="token punctuation" >:</span> <span class="token string" >\'0-0\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'pNode 02\'</span><span class="token punctuation" >,</span> key<span class="token punctuation" >:</span> <span class="token string" >\'0-1\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'pNode 03\'</span><span class="token punctuation" >,</span> key<span class="token punctuation" >:</span> <span class="token string" >\'0-2\'</span><span class="token punctuation" >,</span> isLeaf<span class="token punctuation" >:</span> <span class="token boolean" >true</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span> <span class="token number" >100</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onSelect</span><span class="token punctuation" >(</span>info<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span><span class="token string" >\'selected\'</span><span class="token punctuation" >,</span> info<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >onLoadData</span><span class="token punctuation" >(</span>treeNode<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token keyword" >new</span> <span class="token class-name" >Promise</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>resolve<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token function" >setTimeout</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >const</span> treeData <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >.</span><span class="token punctuation" >.</span><span class="token punctuation" >.</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>treeData<span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n        <span class="token function" >getNewTreeData</span><span class="token punctuation" >(</span>treeData<span class="token punctuation" >,</span> treeNode<span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>eventKey<span class="token punctuation" >,</span> <span class="token function" >generateTreeNodes</span><span class="token punctuation" >(</span>treeNode<span class="token punctuation" >)</span><span class="token punctuation" >,</span> <span class="token number" >2</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n        <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> treeData <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n        <span class="token function" >resolve</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span> <span class="token number" >1000</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token function" >render</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> loop <span class="token operator" >=</span> data <span class="token operator" >=</span><span class="token operator" >></span> data<span class="token punctuation" >.</span><span class="token function" >map</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span>item<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >if</span> <span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n        <span class="token keyword" >return</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>name<span class="token punctuation" >}</span></span> <span class="token attr-name" >key</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span><span class="token punctuation" >{</span><span class="token function" >loop</span><span class="token punctuation" >(</span>item<span class="token punctuation" >.</span>children<span class="token punctuation" >)</span><span class="token punctuation" >}</span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>TreeNode</span><span class="token punctuation" >></span></span><span class="token punctuation" >;</span>\n      <span class="token punctuation" >}</span>\n      <span class="token keyword" >return</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>TreeNode</span> <span class="token attr-name" >title</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>name<span class="token punctuation" >}</span></span> <span class="token attr-name" >key</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key<span class="token punctuation" >}</span></span> <span class="token attr-name" >isLeaf</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>isLeaf<span class="token punctuation" >}</span></span> <span class="token attr-name" >disabled</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>item<span class="token punctuation" >.</span>key <span class="token operator" >===</span> <span class="token string" >\'0-0-0\'</span><span class="token punctuation" >}</span></span> <span class="token punctuation" >/></span></span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >const</span> treeNodes <span class="token operator" >=</span> <span class="token function" >loop</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>treeData<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Tree</span> <span class="token attr-name" >onSelect</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onSelect<span class="token punctuation" >}</span></span> <span class="token attr-name" >loadData</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>onLoadData<span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n        <span class="token punctuation" >{</span>treeNodes<span class="token punctuation" >}</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Tree</span><span class="token punctuation" >></span></span>\n    <span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n\nReactDOM<span class="token punctuation" >.</span><span class="token function" >render</span><span class="token punctuation" >(</span><span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Demo</span> <span class="token punctuation" >/></span></span><span class="token punctuation" >,</span> mountNode<span class="token punctuation" >)</span><span class="token punctuation" >;</span>'}],preview:function(){function n(n){for(var s=[],a=n.props.eventKey,t=0;t<3;t++)s.push({name:"leaf "+a+"-"+t,key:a+"-"+t});return s}function s(n,s,a){var t=function p(n,a){var t=a-1;n.forEach(function(n){(n.key.length>s.length?0===n.key.indexOf(s):0===s.indexOf(n.key))&&(n.children?p(n.children,t):t<1&&(n.isLeaf=!0))})};t(n,a+1)}function a(n,a,t,p){var e=function o(n){p<1||a.length-3>2*p||n.forEach(function(n){0===a.indexOf(n.key)&&(n.children?o(n.children):n.children=t)})};e(n),s(n,a,p)}var t=c["default"].TreeNode,p=l["default"].createClass({displayName:"Demo",getInitialState:function(){return{treeData:[]}},componentDidMount:function(){var n=this;setTimeout(function(){n.setState({treeData:[{name:"pNode 01",key:"0-0"},{name:"pNode 02",key:"0-1"},{name:"pNode 03",key:"0-2",isLeaf:!0}]})},100)},onSelect:function(n){console.log("selected",n)},onLoadData:function(s){var t=this;return new Promise(function(p){setTimeout(function(){var o=[].concat((0,e["default"])(t.state.treeData));a(o,s.props.eventKey,n(s),2),t.setState({treeData:o}),p()},1e3)})},render:function(){var n=function a(n){return n.map(function(n){return n.children?l["default"].createElement(t,{title:n.name,key:n.key},a(n.children)):l["default"].createElement(t,{title:n.name,key:n.key,isLeaf:n.isLeaf,disabled:"0-0-0"===n.key})})},s=n(this.state.treeData);return l["default"].createElement(c["default"],{onSelect:this.onSelect,loadData:this.onLoadData},s)}});return l["default"].createElement(p,null)}}},1199:function(n,s,a){n.exports={"basic-controlled":a(1048),basic:a(1049),draggable:a(1050),dynamic:a(1051)}},1526:function(n,s){}});